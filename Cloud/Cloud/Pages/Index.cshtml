@page
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Hosting
@using Microsoft.AspNetCore.Authentication
@using Cloud.Models
@model IndexModel
@inject ApplicationDbContext _db;
@inject IHostEnvironment _env;
@{
    var user = await User.GetUser();
    if (string.IsNullOrEmpty(HttpContext.Session.GetString("ServerFileKeyComponent")))
    {
        await HttpContext.SignOutAsync();
        HttpContext.Response.Redirect("/Login");
        return;
    }
    ViewData["Title"] = "Dashboard";
}
<link rel="stylesheet"
      href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>
<style>
    .ficon {
        align-items: center;
        display: flex;
    }

    textarea.textarea-autosize {
        height: 2.25rem;
        min-height: 2.25rem;
        overflow-y: hidden;
        resize: none;
    }

    textarea.textarea-autosize.form-control-lg {
        height: 3.75rem;
        min-height: 3.75rem;
    }

    textarea.textarea-autosize.form-control-sm {
        height: 2rem;
        min-height: 2rem;
    }
</style>
<h3 class="mt-3">Files</h3>
<button type="button" class="btn btn-sm btn-primary" data-mdb-toggle="modal" data-mdb-target="#fileUploadModal">
    Upload
</button>
<button type="button" class="btn btn-sm btn-primary" data-mdb-toggle="modal" data-mdb-target="#newFolderModal">
    New Folder
</button>

<div id="markbuttons" style="opacity: 0" class="form-row align-items-center">
    <form method="post" asp-page-handler="DownloadMarked" class="d-inline-flex mt-2">
        <input type="hidden" name="markedJson" class="markedJson"/>
        <button type="submit" class="btn btn-sm btn-info" disabled=""><i class="fas fa-cloud-download-alt"></i> Download Selected</button>
    </form>
    <form method="post" asp-page-handler="DeleteMarked" class="d-inline-flex mt-2">
        <input type="hidden" name="markedJson" class="markedJson"/>
        <button type="submit" class="btn btn-sm btn-danger " disabled=""><i class="fas fa-trash text-white"></i> Delete Selected</button>
    </form>
</div>
<div class="progress mt-2 mb-2" style="display: none; height: 2vh;" id="progress1">
    <div class="progress-bar" style="display: none; min-width: 0;" id="uprogress">

    </div>
</div>
<div id="files_table" class="table-responsive"></div>
<div class="modal fade" id="fileUploadModal" tabindex="-1" aria-labelledby="fileUploadModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="fileUploadModalLabel">Upload</h5>
                <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="uppy-dashboard">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="shareFileModal" tabindex="-1" aria-labelledby="shareFileModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="ShareFile">
                <div class="modal-header">
                    <h5 class="modal-title" id="shareFileModalLabel">Share</h5>
                    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="path" id="shareFile"/>
                    <label for="shareExpiry">Expires</label>
                    <input type="date" name="expiryDate" class="form-control" id="shareExpiry" required/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                        Close
                    </button>
                    <button type="submit" class="btn btn-primary">Share</button>
                </div>
            </form>

        </div>
    </div>
</div>
<div class="modal fade" id="newFolderModal" tabindex="-1" aria-labelledby="newFolderModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="CreateFolder">
                <div class="modal-header">
                    <h5 class="modal-title" id="newFolderModalLabel">Create new Folder</h5>
                    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <label for="fileName">Foldername</label>
                    <input type="text" name="foldername" id="fileName" class="form-control"/>
                    <input type="hidden" name="Path" value="@Model.Path"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                        Close
                    </button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>

        </div>
    </div>
</div>
<div class="modal fade" id="renameFileModal" tabindex="-1" aria-labelledby="renameFileModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="RenameFile">
                <div class="modal-header">
                    <h5 class="modal-title" id="renameFileModalLabel">Rename</h5>
                    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" id="renameFileId"/>
                    <input type="hidden" name="isFile" id="isFile"/>
                    <input type="hidden" name="path" id="renameFilepath"/>
                    <label for="renameName">Rename to</label>
                    <input type="text" name="name" class="form-control" id="renameName" required/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                        Close
                    </button>
                    <button type="submit" class="btn btn-primary">Share</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="modal fade" id="previewFileModal" tabindex="-1" aria-labelledby="previewFileModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="RenameFile">
                <div class="modal-header">
                    <h5 class="modal-title" id="previewFileModalLabel">Preview File</h5>
                    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="previewFileModalBody" style="max-height: 80vh; overflow-y: scroll;">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                        Close
                    </button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts
{

    <link href="https://releases.transloadit.com/uppy/v1.29.1/uppy.min.css" rel="stylesheet">

    <script src="https://releases.transloadit.com/uppy/v1.29.1/uppy.min.js"></script>
    <link href="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.css" rel="stylesheet">

    <script src="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.js"></script>

    <script>
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('download_link') && urlParams.has('p')) {
            const link = urlParams.get('download_link') + "&p=" + urlParams.get("p");
            let a = `<a href='${link}'>Link</a><br><input type='text' class='form-control' value='${link}' readonly>`;
            Swal.fire(
                'Shared',
                a,
                'success'
            );
        }
        if (urlParams.has('preview') && urlParams.has('preview_type')) {
            const content = $("#previewFileModalBody");
            $.get(`/Files/Preview?id=${urlParams.get('preview')}`,
                (data) => {
                    if (urlParams.get('preview_type') === "text") {
                        content.html(`<div class="form-control"  >${data}</div>`);
                        $("#previewFileModal").modal("show");
                    }
                    if (urlParams.get('preview_type') === "json") {
                        const obj = JSON.parse(data);
                        const pretty = JSON.stringify(obj, undefined, 4);
                        content.html(`<textarea class="form-control" readonly rows=20>${pretty}</textarea>`);
                        $("#previewFileModal").modal("show");
                    }
                    if (urlParams.get('preview_type') === "image") {
                        content.html(`<img class="img-fluid" src=${data} />`);
                        $("#previewFileModal").modal("show");
                    }
                    if (urlParams.get('preview_type') === "code") {
                        content.html(`<pre><code>${data}</div></pre>`);
                        hljs.highlightAll();
                        $("#previewFileModal").modal("show");
                    }
                });
        }
        window.history.replaceState(null, null, window.location.pathname);
        var uppy = Uppy.Core()
            .use(Uppy.Dashboard,
                {
                    inline: true,
                    target: '#uppy-dashboard',
                    hideAfterFinish: true,
                    proudlyDisplayPoweredByUppy: false,
                    showRemoveButtonAfterComplete: false,
                    showProgressDetails: true,
                    showLinkToFileUploadResult: false
                })
            .use(Uppy.Tus, { endpoint: '/upload' });
        uppy.use(Uppy.ProgressBar,
            {
                target: '.progres-bar-uppy',
                fixed: false
            });
        uppy.on('complete',
            (file, result) => {
                $("#fileUploadModal").modal("hide");
                loadFiles();
                uppy.reset();
            });
        uppy.on('file-added',
            (file) => {
                console.log(file);
                uppy.setFileMeta(file.id,
                    {
                        uid: '@user.Id',
                        path: '@Model.Path',
                        hash: getCookie("ClientFileKeyComponent")
                    });
            });
        var checkedItems = [];

        function loadFiles() {
            $.get("/Index", { handler: "FilesPartial", path: "@Model.Path" }).done(function(data) {
                $('#files_table').html(data);
                $(".marker-checkbox").change(function() {
                    if (this.checked) {
                        checkedItems.push($(this).parent().attr("data-id"));
                    } else {
                        const index = checkedItems.indexOf($(this).parent().attr("data-id"));
                        if (index !== -1) {
                            checkedItems.splice(index, 1);
                        }
                    }
                    if (checkedItems.length > 0) {
                        $("#markbuttons").css("opacity", "1");
                        $("#markbuttons button").removeAttr('disabled');
                    } else {
                        $("#markbuttons").css("opacity", "0");
                        $("#markbuttons button").attr('disabled', true);

                    }
                    $(".markedJson").val(JSON.stringify(checkedItems));
                });
                $(".mark-all-checkbox").change(function() {
                    $(".marker-checkbox").prop('checked', $(this).prop('checked')).trigger("change");
                    if (this.checked) {
                        $("#markbuttons button").removeAttr('disabled');

                    } else {
                        $("#markbuttons button").attr('disabled', true);
                    }

                });
            });
        }

        function showShareModal(file) {
            $("#shareFile").val(file);
            $("#shareFileModal").modal("show");
        }

        function copy(text) {
            const el = document.createElement('textarea');
            el.value = text;
            el.setAttribute('readonly', '');
            el.style.position = 'absolute';
            el.style.left = '-9999px';
            document.body.appendChild(el);
            el.select();
            document.execCommand('copy');
            document.body.removeChild(el);
            toastr.success("Copied link to clipboard");
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        function openRenameFileModal(id, name, isFile) {

            $("#renameFileId").val(id);
            $("#renameFilepath").val(id);
            $("#renameName").val(name);
            $("#isFile").val(isFile);
            $("#renameFileModal").modal("show");
        }

        function prettyPrint(output, json) {
            const obj = JSON.parse(json);
            const pretty = JSON.stringify(obj, undefined, 4);
            output.value = pretty;
        }

        loadFiles();

// Initialize Textarea
    </script>
}